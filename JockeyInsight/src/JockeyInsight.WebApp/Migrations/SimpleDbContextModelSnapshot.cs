// <auto-generated />
using System;
using JockeyInsight.WebApp.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JockeyInsight.WebApp.Migrations
{
    [DbContext(typeof(SimpleDbContext))]
    partial class SimpleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("JockeyInsight.WebApp.Entities.Note", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("body");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<uint>("RaceStatId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("race_stat_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("RaceStatId")
                        .IsUnique();

                    b.ToTable("notes", (string)null);
                });

            modelBuilder.Entity("JockeyInsight.WebApp.Entities.RaceStat", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    b.Property<decimal>("DistanceBeaten")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("distance_beaten");

                    b.Property<int>("FinishingPosition")
                        .HasColumnType("int")
                        .HasColumnName("finishing_position");

                    b.Property<string>("Horse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("horse");

                    b.Property<string>("Jockey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("jockey");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("race_name");

                    b.Property<string>("RaceCourse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("racecourse");

                    b.Property<DateTime>("RaceDate")
                        .HasColumnType("date")
                        .HasColumnName("race_date");

                    b.Property<int>("RaceDistance")
                        .HasColumnType("int")
                        .HasColumnName("race_distance");

                    b.Property<string>("RaceTime")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("race_time");

                    b.Property<decimal>("TimeBeaten")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("time_beaten");

                    b.Property<string>("Trainer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("trainer");

                    b.HasKey("Id");

                    b.HasIndex("Horse");

                    b.HasIndex("Jockey");

                    b.HasIndex("RaceCourse");

                    b.HasIndex("RaceDate");

                    b.HasIndex("Trainer");

                    b.ToTable("race_stats", (string)null);
                });

            modelBuilder.Entity("JockeyInsight.WebApp.Entities.Note", b =>
                {
                    b.HasOne("JockeyInsight.WebApp.Entities.RaceStat", "RaceStat")
                        .WithOne("Note")
                        .HasForeignKey("JockeyInsight.WebApp.Entities.Note", "RaceStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RaceStat");
                });

            modelBuilder.Entity("JockeyInsight.WebApp.Entities.RaceStat", b =>
                {
                    b.Navigation("Note")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
